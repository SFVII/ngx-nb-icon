{"version":3,"file":"nowboard-icon.js","sources":["../../../projects/nowboard-icon/src/lib/icon-database.ts","../../../projects/nowboard-icon/src/lib/nowboard-icon.service.ts","../../../projects/nowboard-icon/src/lib/hex-to-css-filter/color.ts","../../../projects/nowboard-icon/src/lib/hex-to-css-filter/solver.ts","../../../projects/nowboard-icon/src/lib/hex-to-css-filter/hex-to-css-filter.ts","../../../projects/nowboard-icon/src/lib/nowboard-icon.component.ts","../../../projects/nowboard-icon/src/lib/nowboard-icon.module.ts","../../../projects/nowboard-icon/src/public-api.ts","../../../projects/nowboard-icon/src/nowboard-icon.ts"],"sourcesContent":["export const IconRegistry = {\n  \"activity_1\": \"/assets/nowboard-icon/activity_1.svg\",\n  \"activity_2\": \"/assets/nowboard-icon/activity_2.svg\",\n  \"activity_3\": \"/assets/nowboard-icon/activity_3.svg\",\n  \"activity_4\": \"/assets/nowboard-icon/activity_4.svg\",\n  \"add\": \"/assets/nowboard-icon/add.svg\",\n  \"add_category\": \"/assets/nowboard-icon/add_category.svg\",\n  \"add_circle\": \"/assets/nowboard-icon/add_circle.svg\",\n  \"add_square\": \"/assets/nowboard-icon/add_square.svg\",\n  \"arrow_swap_horizontal\": \"/assets/nowboard-icon/arrow_swap_horizontal.svg\",\n  \"arrow_swap_vertical\": \"/assets/nowboard-icon/arrow_swap_vertical.svg\",\n  \"attachment\": \"/assets/nowboard-icon/attachment.svg\",\n  \"award_1-1\": \"/assets/nowboard-icon/award_1-1.svg\",\n  \"award_1\": \"/assets/nowboard-icon/award_1.svg\",\n  \"award_2-1\": \"/assets/nowboard-icon/award_2-1.svg\",\n  \"award_2\": \"/assets/nowboard-icon/award_2.svg\",\n  \"award_3\": \"/assets/nowboard-icon/award_3.svg\",\n  \"award_4\": \"/assets/nowboard-icon/award_4.svg\",\n  \"backward\": \"/assets/nowboard-icon/backward.svg\",\n  \"backward_10_seconds\": \"/assets/nowboard-icon/backward_10_seconds.svg\",\n  \"backward_5_seconds\": \"/assets/nowboard-icon/backward_5_seconds.svg\",\n  \"battery_charging\": \"/assets/nowboard-icon/battery_charging.svg\",\n  \"battery_fully\": \"/assets/nowboard-icon/battery_fully.svg\",\n  \"battery_low\": \"/assets/nowboard-icon/battery_low.svg\",\n  \"battery_normal\": \"/assets/nowboard-icon/battery_normal.svg\",\n  \"blank\": \"/assets/nowboard-icon/blank.svg\",\n  \"bookmark_1\": \"/assets/nowboard-icon/bookmark_1.svg\",\n  \"bookmark_2\": \"/assets/nowboard-icon/bookmark_2.svg\",\n  \"bookmark_3\": \"/assets/nowboard-icon/bookmark_3.svg\",\n  \"buy_2\": \"/assets/nowboard-icon/buy_2.svg\",\n  \"calender_1\": \"/assets/nowboard-icon/calender_1.svg\",\n  \"calender_2\": \"/assets/nowboard-icon/calender_2.svg\",\n  \"camera_1\": \"/assets/nowboard-icon/camera_1.svg\",\n  \"camera_2\": \"/assets/nowboard-icon/camera_2.svg\",\n  \"camera_slash_1\": \"/assets/nowboard-icon/camera_slash_1.svg\",\n  \"camera_slash_2\": \"/assets/nowboard-icon/camera_slash_2.svg\",\n  \"category\": \"/assets/nowboard-icon/category.svg\",\n  \"chart\": \"/assets/nowboard-icon/chart.svg\",\n  \"close\": \"/assets/nowboard-icon/close.svg\",\n  \"close_circle\": \"/assets/nowboard-icon/close_circle.svg\",\n  \"close_square\": \"/assets/nowboard-icon/close_square.svg\",\n  \"color_picker\": \"/assets/nowboard-icon/color_picker.svg\",\n  \"crop_1\": \"/assets/nowboard-icon/crop_1.svg\",\n  \"crop_2\": \"/assets/nowboard-icon/crop_2.svg\",\n  \"crop_3\": \"/assets/nowboard-icon/crop_3.svg\",\n  \"cup\": \"/assets/nowboard-icon/cup.svg\",\n  \"danger_circle\": \"/assets/nowboard-icon/danger_circle.svg\",\n  \"danger_triangle\": \"/assets/nowboard-icon/danger_triangle.svg\",\n  \"delete_1\": \"/assets/nowboard-icon/delete_1.svg\",\n  \"delete_2\": \"/assets/nowboard-icon/delete_2.svg\",\n  \"discovery_1\": \"/assets/nowboard-icon/discovery_1.svg\",\n  \"discovery_2\": \"/assets/nowboard-icon/discovery_2.svg\",\n  \"dislike\": \"/assets/nowboard-icon/dislike.svg\",\n  \"display_1\": \"/assets/nowboard-icon/display_1.svg\",\n  \"display_2\": \"/assets/nowboard-icon/display_2.svg\",\n  \"display_3\": \"/assets/nowboard-icon/display_3.svg\",\n  \"display_4\": \"/assets/nowboard-icon/display_4.svg\",\n  \"docuement_align_left_11\": \"/assets/nowboard-icon/docuement_align_left_11.svg\",\n  \"document_add_1\": \"/assets/nowboard-icon/document_add_1.svg\",\n  \"document_add_2\": \"/assets/nowboard-icon/document_add_2.svg\",\n  \"document_add_3\": \"/assets/nowboard-icon/document_add_3.svg\",\n  \"document_add_4\": \"/assets/nowboard-icon/document_add_4.svg\",\n  \"document_align_11\": \"/assets/nowboard-icon/document_align_11.svg\",\n  \"document_align_center_1\": \"/assets/nowboard-icon/document_align_center_1.svg\",\n  \"document_align_center_2\": \"/assets/nowboard-icon/document_align_center_2.svg\",\n  \"document_align_center_3\": \"/assets/nowboard-icon/document_align_center_3.svg\",\n  \"document_align_center_5\": \"/assets/nowboard-icon/document_align_center_5.svg\",\n  \"document_align_center_6\": \"/assets/nowboard-icon/document_align_center_6.svg\",\n  \"document_align_center_7\": \"/assets/nowboard-icon/document_align_center_7.svg\",\n  \"document_align_left_1\": \"/assets/nowboard-icon/document_align_left_1.svg\",\n  \"document_align_left_10\": \"/assets/nowboard-icon/document_align_left_10.svg\",\n  \"document_align_left_12\": \"/assets/nowboard-icon/document_align_left_12.svg\",\n  \"document_align_left_13\": \"/assets/nowboard-icon/document_align_left_13.svg\",\n  \"document_align_left_14\": \"/assets/nowboard-icon/document_align_left_14.svg\",\n  \"document_align_left_15\": \"/assets/nowboard-icon/document_align_left_15.svg\",\n  \"document_align_left_16\": \"/assets/nowboard-icon/document_align_left_16.svg\",\n  \"document_align_left_17\": \"/assets/nowboard-icon/document_align_left_17.svg\",\n  \"document_align_left_2\": \"/assets/nowboard-icon/document_align_left_2.svg\",\n  \"document_align_left_3\": \"/assets/nowboard-icon/document_align_left_3.svg\",\n  \"document_align_left_4-1\": \"/assets/nowboard-icon/document_align_left_4-1.svg\",\n  \"document_align_left_4\": \"/assets/nowboard-icon/document_align_left_4.svg\",\n  \"document_align_left_5\": \"/assets/nowboard-icon/document_align_left_5.svg\",\n  \"document_align_left_6\": \"/assets/nowboard-icon/document_align_left_6.svg\",\n  \"document_align_left_7-1\": \"/assets/nowboard-icon/document_align_left_7-1.svg\",\n  \"document_align_left_7\": \"/assets/nowboard-icon/document_align_left_7.svg\",\n  \"document_align_left_8\": \"/assets/nowboard-icon/document_align_left_8.svg\",\n  \"document_align_left_9-1\": \"/assets/nowboard-icon/document_align_left_9-1.svg\",\n  \"document_align_left_9\": \"/assets/nowboard-icon/document_align_left_9.svg\",\n  \"document_align_right_1\": \"/assets/nowboard-icon/document_align_right_1.svg\",\n  \"document_align_right_10\": \"/assets/nowboard-icon/document_align_right_10.svg\",\n  \"document_align_right_12\": \"/assets/nowboard-icon/document_align_right_12.svg\",\n  \"document_align_right_13\": \"/assets/nowboard-icon/document_align_right_13.svg\",\n  \"document_align_right_14\": \"/assets/nowboard-icon/document_align_right_14.svg\",\n  \"document_align_right_15\": \"/assets/nowboard-icon/document_align_right_15.svg\",\n  \"document_align_right_16\": \"/assets/nowboard-icon/document_align_right_16.svg\",\n  \"document_align_right_17\": \"/assets/nowboard-icon/document_align_right_17.svg\",\n  \"document_align_right_2\": \"/assets/nowboard-icon/document_align_right_2.svg\",\n  \"document_align_right_3\": \"/assets/nowboard-icon/document_align_right_3.svg\",\n  \"document_align_right_4\": \"/assets/nowboard-icon/document_align_right_4.svg\",\n  \"document_align_right_5\": \"/assets/nowboard-icon/document_align_right_5.svg\",\n  \"document_align_right_6\": \"/assets/nowboard-icon/document_align_right_6.svg\",\n  \"document_align_right_9\": \"/assets/nowboard-icon/document_align_right_9.svg\",\n  \"document_download_1\": \"/assets/nowboard-icon/document_download_1.svg\",\n  \"document_download_2\": \"/assets/nowboard-icon/document_download_2.svg\",\n  \"document_download_3\": \"/assets/nowboard-icon/document_download_3.svg\",\n  \"document_download_4\": \"/assets/nowboard-icon/document_download_4.svg\",\n  \"document_fail_1\": \"/assets/nowboard-icon/document_fail_1.svg\",\n  \"document_fail_2\": \"/assets/nowboard-icon/document_fail_2.svg\",\n  \"document_fail_3\": \"/assets/nowboard-icon/document_fail_3.svg\",\n  \"document_fail_4\": \"/assets/nowboard-icon/document_fail_4.svg\",\n  \"document_justify_center_1\": \"/assets/nowboard-icon/document_justify_center_1.svg\",\n  \"document_justify_center_2\": \"/assets/nowboard-icon/document_justify_center_2.svg\",\n  \"document_justify_left_1\": \"/assets/nowboard-icon/document_justify_left_1.svg\",\n  \"document_justify_left_2\": \"/assets/nowboard-icon/document_justify_left_2.svg\",\n  \"document_justify_right_1\": \"/assets/nowboard-icon/document_justify_right_1.svg\",\n  \"document_justify_right_2\": \"/assets/nowboard-icon/document_justify_right_2.svg\",\n  \"document_minus_1\": \"/assets/nowboard-icon/document_minus_1.svg\",\n  \"document_minus_2\": \"/assets/nowboard-icon/document_minus_2.svg\",\n  \"document_minus_3\": \"/assets/nowboard-icon/document_minus_3.svg\",\n  \"document_minus_4\": \"/assets/nowboard-icon/document_minus_4.svg\",\n  \"document_upload_1\": \"/assets/nowboard-icon/document_upload_1.svg\",\n  \"document_upload_2\": \"/assets/nowboard-icon/document_upload_2.svg\",\n  \"document_upload_3\": \"/assets/nowboard-icon/document_upload_3.svg\",\n  \"document_upload_4\": \"/assets/nowboard-icon/document_upload_4.svg\",\n  \"down_1\": \"/assets/nowboard-icon/down_1.svg\",\n  \"down_2\": \"/assets/nowboard-icon/down_2.svg\",\n  \"down_3\": \"/assets/nowboard-icon/down_3.svg\",\n  \"down_circle_1\": \"/assets/nowboard-icon/down_circle_1.svg\",\n  \"down_circle_2\": \"/assets/nowboard-icon/down_circle_2.svg\",\n  \"down_square_1\": \"/assets/nowboard-icon/down_square_1.svg\",\n  \"down_square_2\": \"/assets/nowboard-icon/down_square_2.svg\",\n  \"download\": \"/assets/nowboard-icon/download.svg\",\n  \"drop\": \"/assets/nowboard-icon/drop.svg\",\n  \"edit_1\": \"/assets/nowboard-icon/edit_1.svg\",\n  \"edit_2\": \"/assets/nowboard-icon/edit_2.svg\",\n  \"edit_square\": \"/assets/nowboard-icon/edit_square.svg\",\n  \"education\": \"/assets/nowboard-icon/education.svg\",\n  \"faq_circle\": \"/assets/nowboard-icon/faq_circle.svg\",\n  \"filter_1\": \"/assets/nowboard-icon/filter_1.svg\",\n  \"filter_2\": \"/assets/nowboard-icon/filter_2.svg\",\n  \"filter_3\": \"/assets/nowboard-icon/filter_3.svg\",\n  \"filter_4\": \"/assets/nowboard-icon/filter_4.svg\",\n  \"filter_5\": \"/assets/nowboard-icon/filter_5.svg\",\n  \"flash_disk_1\": \"/assets/nowboard-icon/flash_disk_1.svg\",\n  \"flash_disk_2\": \"/assets/nowboard-icon/flash_disk_2.svg\",\n  \"folder_1\": \"/assets/nowboard-icon/folder_1.svg\",\n  \"folder_2\": \"/assets/nowboard-icon/folder_2.svg\",\n  \"folder_add_1\": \"/assets/nowboard-icon/folder_add_1.svg\",\n  \"folder_add_2\": \"/assets/nowboard-icon/folder_add_2.svg\",\n  \"folder_cross_1\": \"/assets/nowboard-icon/folder_cross_1.svg\",\n  \"folder_cross_2\": \"/assets/nowboard-icon/folder_cross_2.svg\",\n  \"folder_minus_1\": \"/assets/nowboard-icon/folder_minus_1.svg\",\n  \"folder_minus_2\": \"/assets/nowboard-icon/folder_minus_2.svg\",\n  \"foreign\": \"/assets/nowboard-icon/foreign.svg\",\n  \"forward\": \"/assets/nowboard-icon/forward.svg\",\n  \"forward_10_secondes\": \"/assets/nowboard-icon/forward_10_secondes.svg\",\n  \"forward_5_seconds\": \"/assets/nowboard-icon/forward_5_seconds.svg\",\n  \"gift_1\": \"/assets/nowboard-icon/gift_1.svg\",\n  \"gift_2\": \"/assets/nowboard-icon/gift_2.svg\",\n  \"graph\": \"/assets/nowboard-icon/graph.svg\",\n  \"group\": \"/assets/nowboard-icon/group.svg\",\n  \"group_1\": \"/assets/nowboard-icon/group_1.svg\",\n  \"group_2\": \"/assets/nowboard-icon/group_2.svg\",\n  \"group_3\": \"/assets/nowboard-icon/group_3.svg\",\n  \"happy_1\": \"/assets/nowboard-icon/happy_1.svg\",\n  \"happy_2\": \"/assets/nowboard-icon/happy_2.svg\",\n  \"hashtag\": \"/assets/nowboard-icon/hashtag.svg\",\n  \"headphone_1\": \"/assets/nowboard-icon/headphone_1.svg\",\n  \"headphone_2\": \"/assets/nowboard-icon/headphone_2.svg\",\n  \"heart_1\": \"/assets/nowboard-icon/heart_1.svg\",\n  \"heart_2\": \"/assets/nowboard-icon/heart_2.svg\",\n  \"heart_3\": \"/assets/nowboard-icon/heart_3.svg\",\n  \"hide\": \"/assets/nowboard-icon/hide.svg\",\n  \"home_1\": \"/assets/nowboard-icon/home_1.svg\",\n  \"home_2\": \"/assets/nowboard-icon/home_2.svg\",\n  \"home_3\": \"/assets/nowboard-icon/home_3.svg\",\n  \"home_4\": \"/assets/nowboard-icon/home_4.svg\",\n  \"image\": \"/assets/nowboard-icon/image.svg\",\n  \"information_circle\": \"/assets/nowboard-icon/information_circle.svg\",\n  \"information_square\": \"/assets/nowboard-icon/information_square.svg\",\n  \"instagram\": \"/assets/nowboard-icon/instagram.svg\",\n  \"keyboard\": \"/assets/nowboard-icon/keyboard.svg\",\n  \"left_1\": \"/assets/nowboard-icon/left_1.svg\",\n  \"left_2\": \"/assets/nowboard-icon/left_2.svg\",\n  \"left_3\": \"/assets/nowboard-icon/left_3.svg\",\n  \"left_circle_1\": \"/assets/nowboard-icon/left_circle_1.svg\",\n  \"left_circle_2\": \"/assets/nowboard-icon/left_circle_2.svg\",\n  \"left_square_1\": \"/assets/nowboard-icon/left_square_1.svg\",\n  \"left_square_2\": \"/assets/nowboard-icon/left_square_2.svg\",\n  \"like\": \"/assets/nowboard-icon/like.svg\",\n  \"like_1\": \"/assets/nowboard-icon/like_1.svg\",\n  \"like_2\": \"/assets/nowboard-icon/like_2.svg\",\n  \"like_3\": \"/assets/nowboard-icon/like_3.svg\",\n  \"link\": \"/assets/nowboard-icon/link.svg\",\n  \"location\": \"/assets/nowboard-icon/location.svg\",\n  \"location_add\": \"/assets/nowboard-icon/location_add.svg\",\n  \"location_cross\": \"/assets/nowboard-icon/location_cross.svg\",\n  \"location_minus\": \"/assets/nowboard-icon/location_minus.svg\",\n  \"location_tick\": \"/assets/nowboard-icon/location_tick.svg\",\n  \"lock_1\": \"/assets/nowboard-icon/lock_1.svg\",\n  \"lock_2\": \"/assets/nowboard-icon/lock_2.svg\",\n  \"lock_3\": \"/assets/nowboard-icon/lock_3.svg\",\n  \"login\": \"/assets/nowboard-icon/login.svg\",\n  \"logout\": \"/assets/nowboard-icon/logout.svg\",\n  \"map\": \"/assets/nowboard-icon/map.svg\",\n  \"menu\": \"/assets/nowboard-icon/menu.svg\",\n  \"menu_candy_box\": \"/assets/nowboard-icon/menu_candy_box.svg\",\n  \"menu_cheesesburger\": \"/assets/nowboard-icon/menu_cheesesburger.svg\",\n  \"menu_fries\": \"/assets/nowboard-icon/menu_fries.svg\",\n  \"menu_hamburger-1\": \"/assets/nowboard-icon/menu_hamburger-1.svg\",\n  \"menu_hamburger\": \"/assets/nowboard-icon/menu_hamburger.svg\",\n  \"menu_hotdog\": \"/assets/nowboard-icon/menu_hotdog.svg\",\n  \"menu_kebab\": \"/assets/nowboard-icon/menu_kebab.svg\",\n  \"menu_meatballs\": \"/assets/nowboard-icon/menu_meatballs.svg\",\n  \"menu_strawberry\": \"/assets/nowboard-icon/menu_strawberry.svg\",\n  \"menu_veggie_burger\": \"/assets/nowboard-icon/menu_veggie_burger.svg\",\n  \"message_1\": \"/assets/nowboard-icon/message_1.svg\",\n  \"message_10\": \"/assets/nowboard-icon/message_10.svg\",\n  \"message_11\": \"/assets/nowboard-icon/message_11.svg\",\n  \"message_12\": \"/assets/nowboard-icon/message_12.svg\",\n  \"message_13\": \"/assets/nowboard-icon/message_13.svg\",\n  \"message_14\": \"/assets/nowboard-icon/message_14.svg\",\n  \"message_15\": \"/assets/nowboard-icon/message_15.svg\",\n  \"message_16\": \"/assets/nowboard-icon/message_16.svg\",\n  \"message_17\": \"/assets/nowboard-icon/message_17.svg\",\n  \"message_18\": \"/assets/nowboard-icon/message_18.svg\",\n  \"message_2\": \"/assets/nowboard-icon/message_2.svg\",\n  \"message_21\": \"/assets/nowboard-icon/message_21.svg\",\n  \"message_22\": \"/assets/nowboard-icon/message_22.svg\",\n  \"message_23\": \"/assets/nowboard-icon/message_23.svg\",\n  \"message_24\": \"/assets/nowboard-icon/message_24.svg\",\n  \"message_25\": \"/assets/nowboard-icon/message_25.svg\",\n  \"message_26\": \"/assets/nowboard-icon/message_26.svg\",\n  \"message_27\": \"/assets/nowboard-icon/message_27.svg\",\n  \"message_28\": \"/assets/nowboard-icon/message_28.svg\",\n  \"message_29\": \"/assets/nowboard-icon/message_29.svg\",\n  \"message_3\": \"/assets/nowboard-icon/message_3.svg\",\n  \"message_30\": \"/assets/nowboard-icon/message_30.svg\",\n  \"message_31\": \"/assets/nowboard-icon/message_31.svg\",\n  \"message_32\": \"/assets/nowboard-icon/message_32.svg\",\n  \"message_33\": \"/assets/nowboard-icon/message_33.svg\",\n  \"message_34\": \"/assets/nowboard-icon/message_34.svg\",\n  \"message_35\": \"/assets/nowboard-icon/message_35.svg\",\n  \"message_36\": \"/assets/nowboard-icon/message_36.svg\",\n  \"message_37\": \"/assets/nowboard-icon/message_37.svg\",\n  \"message_38\": \"/assets/nowboard-icon/message_38.svg\",\n  \"message_4\": \"/assets/nowboard-icon/message_4.svg\",\n  \"message_5\": \"/assets/nowboard-icon/message_5.svg\",\n  \"message_6\": \"/assets/nowboard-icon/message_6.svg\",\n  \"message_7\": \"/assets/nowboard-icon/message_7.svg\",\n  \"message_8\": \"/assets/nowboard-icon/message_8.svg\",\n  \"message_9\": \"/assets/nowboard-icon/message_9.svg\",\n  \"microphone_1\": \"/assets/nowboard-icon/microphone_1.svg\",\n  \"microphone_2\": \"/assets/nowboard-icon/microphone_2.svg\",\n  \"microphone_3\": \"/assets/nowboard-icon/microphone_3.svg\",\n  \"microphone_4\": \"/assets/nowboard-icon/microphone_4.svg\",\n  \"microphone_off\": \"/assets/nowboard-icon/microphone_off.svg\",\n  \"minus\": \"/assets/nowboard-icon/minus.svg\",\n  \"minus_circle\": \"/assets/nowboard-icon/minus_circle.svg\",\n  \"minus_square\": \"/assets/nowboard-icon/minus_square.svg\",\n  \"moon\": \"/assets/nowboard-icon/moon.svg\",\n  \"more_circle\": \"/assets/nowboard-icon/more_circle.svg\",\n  \"more_square\": \"/assets/nowboard-icon/more_square.svg\",\n  \"mouse\": \"/assets/nowboard-icon/mouse.svg\",\n  \"music\": \"/assets/nowboard-icon/music.svg\",\n  \"music_filter\": \"/assets/nowboard-icon/music_filter.svg\",\n  \"musicnote\": \"/assets/nowboard-icon/musicnote.svg\",\n  \"next\": \"/assets/nowboard-icon/next.svg\",\n  \"notification_1\": \"/assets/nowboard-icon/notification_1.svg\",\n  \"notification_2\": \"/assets/nowboard-icon/notification_2.svg\",\n  \"notification_3\": \"/assets/nowboard-icon/notification_3.svg\",\n  \"notification_4\": \"/assets/nowboard-icon/notification_4.svg\",\n  \"numerical_star\": \"/assets/nowboard-icon/numerical_star.svg\",\n  \"off\": \"/assets/nowboard-icon/off.svg\",\n  \"palette\": \"/assets/nowboard-icon/palette.svg\",\n  \"password_1\": \"/assets/nowboard-icon/password_1.svg\",\n  \"password_2\": \"/assets/nowboard-icon/password_2.svg\",\n  \"password_3\": \"/assets/nowboard-icon/password_3.svg\",\n  \"password_4\": \"/assets/nowboard-icon/password_4.svg\",\n  \"password_5\": \"/assets/nowboard-icon/password_5.svg\",\n  \"password_6\": \"/assets/nowboard-icon/password_6.svg\",\n  \"pause\": \"/assets/nowboard-icon/pause.svg\",\n  \"pause_circle\": \"/assets/nowboard-icon/pause_circle.svg\",\n  \"pause_octagon\": \"/assets/nowboard-icon/pause_octagon.svg\",\n  \"pause_octagon_1\": \"/assets/nowboard-icon/pause_octagon_1.svg\",\n  \"pen\": \"/assets/nowboard-icon/pen.svg\",\n  \"pin\": \"/assets/nowboard-icon/pin.svg\",\n  \"plat\": \"/assets/nowboard-icon/plat.svg\",\n  \"play_circle\": \"/assets/nowboard-icon/play_circle.svg\",\n  \"play_octagon\": \"/assets/nowboard-icon/play_octagon.svg\",\n  \"play_square\": \"/assets/nowboard-icon/play_square.svg\",\n  \"pocker\": \"/assets/nowboard-icon/pocker.svg\",\n  \"previous\": \"/assets/nowboard-icon/previous.svg\",\n  \"profile_1\": \"/assets/nowboard-icon/profile_1.svg\",\n  \"profile_accepted_2\": \"/assets/nowboard-icon/profile_accepted_2.svg\",\n  \"profile_add_1\": \"/assets/nowboard-icon/profile_add_1.svg\",\n  \"profile_add_2\": \"/assets/nowboard-icon/profile_add_2.svg\",\n  \"profile_circle\": \"/assets/nowboard-icon/profile_circle.svg\",\n  \"profile_delete_1\": \"/assets/nowboard-icon/profile_delete_1.svg\",\n  \"profile_delete_2\": \"/assets/nowboard-icon/profile_delete_2.svg\",\n  \"profile_octagon\": \"/assets/nowboard-icon/profile_octagon.svg\",\n  \"profile_remove_1\": \"/assets/nowboard-icon/profile_remove_1.svg\",\n  \"profile_remove_2\": \"/assets/nowboard-icon/profile_remove_2.svg\",\n  \"profile_square\": \"/assets/nowboard-icon/profile_square.svg\",\n  \"ps5_1\": \"/assets/nowboard-icon/ps5_1.svg\",\n  \"ps5_2\": \"/assets/nowboard-icon/ps5_2.svg\",\n  \"radio\": \"/assets/nowboard-icon/radio.svg\",\n  \"record\": \"/assets/nowboard-icon/record.svg\",\n  \"redo\": \"/assets/nowboard-icon/redo.svg\",\n  \"refresh_1\": \"/assets/nowboard-icon/refresh_1.svg\",\n  \"refresh_2\": \"/assets/nowboard-icon/refresh_2.svg\",\n  \"repeat_1\": \"/assets/nowboard-icon/repeat_1.svg\",\n  \"repeat_3\": \"/assets/nowboard-icon/repeat_3.svg\",\n  \"repeat_one_1\": \"/assets/nowboard-icon/repeat_one_1.svg\",\n  \"repeat_one_2\": \"/assets/nowboard-icon/repeat_one_2.svg\",\n  \"repeat_one_3\": \"/assets/nowboard-icon/repeat_one_3.svg\",\n  \"report\": \"/assets/nowboard-icon/report.svg\",\n  \"right_1\": \"/assets/nowboard-icon/right_1.svg\",\n  \"right_2\": \"/assets/nowboard-icon/right_2.svg\",\n  \"right_3\": \"/assets/nowboard-icon/right_3.svg\",\n  \"right_circle_1\": \"/assets/nowboard-icon/right_circle_1.svg\",\n  \"right_circle_2\": \"/assets/nowboard-icon/right_circle_2.svg\",\n  \"right_square_1\": \"/assets/nowboard-icon/right_square_1.svg\",\n  \"right_square_2\": \"/assets/nowboard-icon/right_square_2.svg\",\n  \"rotate_left\": \"/assets/nowboard-icon/rotate_left.svg\",\n  \"rotate_right\": \"/assets/nowboard-icon/rotate_right.svg\",\n  \"sad\": \"/assets/nowboard-icon/sad.svg\",\n  \"scan_1\": \"/assets/nowboard-icon/scan_1.svg\",\n  \"scan_10\": \"/assets/nowboard-icon/scan_10.svg\",\n  \"scan_11\": \"/assets/nowboard-icon/scan_11.svg\",\n  \"scan_12\": \"/assets/nowboard-icon/scan_12.svg\",\n  \"scan_13\": \"/assets/nowboard-icon/scan_13.svg\",\n  \"scan_2\": \"/assets/nowboard-icon/scan_2.svg\",\n  \"scan_3\": \"/assets/nowboard-icon/scan_3.svg\",\n  \"scan_4\": \"/assets/nowboard-icon/scan_4.svg\",\n  \"scan_5\": \"/assets/nowboard-icon/scan_5.svg\",\n  \"scan_6\": \"/assets/nowboard-icon/scan_6.svg\",\n  \"scan_7\": \"/assets/nowboard-icon/scan_7.svg\",\n  \"scan_8\": \"/assets/nowboard-icon/scan_8.svg\",\n  \"search_1\": \"/assets/nowboard-icon/search_1.svg\",\n  \"search_2\": \"/assets/nowboard-icon/search_2.svg\",\n  \"security_safe\": \"/assets/nowboard-icon/security_safe.svg\",\n  \"send_1\": \"/assets/nowboard-icon/send_1.svg\",\n  \"send_2\": \"/assets/nowboard-icon/send_2.svg\",\n  \"send_3\": \"/assets/nowboard-icon/send_3.svg\",\n  \"send_4\": \"/assets/nowboard-icon/send_4.svg\",\n  \"send_5\": \"/assets/nowboard-icon/send_5.svg\",\n  \"setting\": \"/assets/nowboard-icon/setting.svg\",\n  \"shield_1\": \"/assets/nowboard-icon/shield_1.svg\",\n  \"shield_cross\": \"/assets/nowboard-icon/shield_cross.svg\",\n  \"shield_plus\": \"/assets/nowboard-icon/shield_plus.svg\",\n  \"shield_star\": \"/assets/nowboard-icon/shield_star.svg\",\n  \"shield_tick\": \"/assets/nowboard-icon/shield_tick.svg\",\n  \"show\": \"/assets/nowboard-icon/show.svg\",\n  \"shuffle_1\": \"/assets/nowboard-icon/shuffle_1.svg\",\n  \"shuffle_2\": \"/assets/nowboard-icon/shuffle_2.svg\",\n  \"situation_1\": \"/assets/nowboard-icon/situation_1.svg\",\n  \"situation_2\": \"/assets/nowboard-icon/situation_2.svg\",\n  \"sms_1\": \"/assets/nowboard-icon/sms_1.svg\",\n  \"sms_2\": \"/assets/nowboard-icon/sms_2.svg\",\n  \"speaker_1\": \"/assets/nowboard-icon/speaker_1.svg\",\n  \"speaker_2\": \"/assets/nowboard-icon/speaker_2.svg\",\n  \"start_1\": \"/assets/nowboard-icon/start_1.svg\",\n  \"sticker\": \"/assets/nowboard-icon/sticker.svg\",\n  \"stop\": \"/assets/nowboard-icon/stop.svg\",\n  \"stop_circle\": \"/assets/nowboard-icon/stop_circle.svg\",\n  \"sun_1\": \"/assets/nowboard-icon/sun_1.svg\",\n  \"sun_2\": \"/assets/nowboard-icon/sun_2.svg\",\n  \"swap_1\": \"/assets/nowboard-icon/swap_1.svg\",\n  \"swap_2\": \"/assets/nowboard-icon/swap_2.svg\",\n  \"tag\": \"/assets/nowboard-icon/tag.svg\",\n  \"tick\": \"/assets/nowboard-icon/tick.svg\",\n  \"tick_circle\": \"/assets/nowboard-icon/tick_circle.svg\",\n  \"tick_square\": \"/assets/nowboard-icon/tick_square.svg\",\n  \"time_circle_1\": \"/assets/nowboard-icon/time_circle_1.svg\",\n  \"time_circle_2\": \"/assets/nowboard-icon/time_circle_2.svg\",\n  \"time_circle_3\": \"/assets/nowboard-icon/time_circle_3.svg\",\n  \"time_circle_4\": \"/assets/nowboard-icon/time_circle_4.svg\",\n  \"time_circle_5\": \"/assets/nowboard-icon/time_circle_5.svg\",\n  \"time_circle_6\": \"/assets/nowboard-icon/time_circle_6.svg\",\n  \"tv\": \"/assets/nowboard-icon/tv.svg\",\n  \"undo\": \"/assets/nowboard-icon/undo.svg\",\n  \"unlock_1\": \"/assets/nowboard-icon/unlock_1.svg\",\n  \"unlock_2\": \"/assets/nowboard-icon/unlock_2.svg\",\n  \"unlock_3\": \"/assets/nowboard-icon/unlock_3.svg\",\n  \"up_1\": \"/assets/nowboard-icon/up_1.svg\",\n  \"up_2\": \"/assets/nowboard-icon/up_2.svg\",\n  \"up_3\": \"/assets/nowboard-icon/up_3.svg\",\n  \"up_circle_1\": \"/assets/nowboard-icon/up_circle_1.svg\",\n  \"up_circle_2\": \"/assets/nowboard-icon/up_circle_2.svg\",\n  \"up_square_1\": \"/assets/nowboard-icon/up_square_1.svg\",\n  \"up_square_2\": \"/assets/nowboard-icon/up_square_2.svg\",\n  \"upload\": \"/assets/nowboard-icon/upload.svg\",\n  \"user_tag\": \"/assets/nowboard-icon/user_tag.svg\",\n  \"vector\": \"/assets/nowboard-icon/vector.svg\",\n  \"verified\": \"/assets/nowboard-icon/verified.svg\",\n  \"video_1\": \"/assets/nowboard-icon/video_1.svg\",\n  \"video_2\": \"/assets/nowboard-icon/video_2.svg\",\n  \"video_slash\": \"/assets/nowboard-icon/video_slash.svg\",\n  \"virus\": \"/assets/nowboard-icon/virus.svg\",\n  \"voice\": \"/assets/nowboard-icon/voice.svg\",\n  \"voice_circle\": \"/assets/nowboard-icon/voice_circle.svg\",\n  \"voice_shape_1\": \"/assets/nowboard-icon/voice_shape_1.svg\",\n  \"voice_shape_2\": \"/assets/nowboard-icon/voice_shape_2.svg\",\n  \"voice_square\": \"/assets/nowboard-icon/voice_square.svg\",\n  \"volume_cross\": \"/assets/nowboard-icon/volume_cross.svg\",\n  \"volume_high\": \"/assets/nowboard-icon/volume_high.svg\",\n  \"volume_low\": \"/assets/nowboard-icon/volume_low.svg\",\n  \"volume_low_1\": \"/assets/nowboard-icon/volume_low_1.svg\",\n  \"volume_mute\": \"/assets/nowboard-icon/volume_mute.svg\",\n  \"volume_off\": \"/assets/nowboard-icon/volume_off.svg\",\n  \"volume_slash\": \"/assets/nowboard-icon/volume_slash.svg\",\n  \"volume_up\": \"/assets/nowboard-icon/volume_up.svg\",\n  \"warning\": \"/assets/nowboard-icon/warning.svg\",\n  \"watch_1\": \"/assets/nowboard-icon/watch_1.svg\",\n  \"watch_2\": \"/assets/nowboard-icon/watch_2.svg\",\n  \"website\": \"/assets/nowboard-icon/website.svg\",\n  \"wifi\": \"/assets/nowboard-icon/wifi.svg\",\n  \"zoom_in\": \"/assets/nowboard-icon/zoom_in.svg\",\n  \"zoom_out\": \"/assets/nowboard-icon/zoom_out.svg\"\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {IconRegistry} from \"./icon-database\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {INowboardIconConfig} from \"./interface\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NowboardIconService {\n  public registry: { [key: string]: string } = IconRegistry\n  public setColorRules: BehaviorSubject<INowboardIconConfig | null> = new BehaviorSubject<INowboardIconConfig | null>(null)\n  public DefaultColor: INowboardIconConfig | undefined;\n\n  constructor(@Inject('__NowboardIcon__') config: INowboardIconConfig) {\n    if (config) this.DefaultColor = config;\n    this.setColorRules.subscribe((colors: INowboardIconConfig | null) => {\n      if (colors) {\n        this.DefaultColor = colors;\n      }\n    })\n  }\n\n  getFromRegistry(key: string) {\n    return this.registry[key];\n  }\n\n  addRegistry(key: string, path: string) {\n    this.registry[key] = path;\n  }\n}\n","interface HSLData {\n  h: number;\n  s: number;\n  l: number;\n}\n\nclass Color {\n  r = 0;\n  g = 0;\n  b = 0;\n\n  constructor(r: number, g: number, b: number) {\n    this.set(r, g, b);\n  }\n\n  set(r: number, g: number, b: number): void {\n    this.r = this.clamp(r);\n    this.g = this.clamp(g);\n    this.b = this.clamp(b);\n  }\n\n  /**\n   * Applying cals to get CSS filter for hue-rotate\n   *\n   * @param {number} [angle=0]\n   * @memberof Color\n   */\n  hueRotate(angle = 0): void {\n    angle = (angle / 180) * Math.PI;\n    const sin = Math.sin(angle);\n    const cos = Math.cos(angle);\n\n    this.multiply([\n      0.213 + cos * 0.787 - sin * 0.213,\n      0.715 - cos * 0.715 - sin * 0.715,\n      0.072 - cos * 0.072 + sin * 0.928,\n      0.213 - cos * 0.213 + sin * 0.143,\n      0.715 + cos * 0.285 + sin * 0.14,\n      0.072 - cos * 0.072 - sin * 0.283,\n      0.213 - cos * 0.213 - sin * 0.787,\n      0.715 - cos * 0.715 + sin * 0.715,\n      0.072 + cos * 0.928 + sin * 0.072,\n    ]);\n  }\n\n  /**\n   * Applying cals to get CSS filter for grayscale\n   *\n   * @param {number} [value=1]\n   * @memberof Color\n   */\n  grayscale(value = 1): void {\n    this.multiply([\n      0.2126 + 0.7874 * (1 - value),\n      0.7152 - 0.7152 * (1 - value),\n      0.0722 - 0.0722 * (1 - value),\n      0.2126 - 0.2126 * (1 - value),\n      0.7152 + 0.2848 * (1 - value),\n      0.0722 - 0.0722 * (1 - value),\n      0.2126 - 0.2126 * (1 - value),\n      0.7152 - 0.7152 * (1 - value),\n      0.0722 + 0.9278 * (1 - value),\n    ]);\n  }\n\n  /**\n   * Applying cals to get CSS filter for sepia\n   *\n   * @param {number} [value=1]\n   * @memberof Color\n   */\n  sepia(value = 1): void {\n    this.multiply([\n      0.393 + 0.607 * (1 - value),\n      0.769 - 0.769 * (1 - value),\n      0.189 - 0.189 * (1 - value),\n      0.349 - 0.349 * (1 - value),\n      0.686 + 0.314 * (1 - value),\n      0.168 - 0.168 * (1 - value),\n      0.272 - 0.272 * (1 - value),\n      0.534 - 0.534 * (1 - value),\n      0.131 + 0.869 * (1 - value),\n    ]);\n  }\n\n  /**\n   * Applying cals to get CSS filter for saturate\n   *\n   * @param {number} [value=1]\n   * @memberof Color\n   */\n  saturate(value = 1): void {\n    this.multiply([\n      0.213 + 0.787 * value,\n      0.715 - 0.715 * value,\n      0.072 - 0.072 * value,\n      0.213 - 0.213 * value,\n      0.715 + 0.285 * value,\n      0.072 - 0.072 * value,\n      0.213 - 0.213 * value,\n      0.715 - 0.715 * value,\n      0.072 + 0.928 * value,\n    ]);\n  }\n\n  private multiply(matrix: number[]): void {\n    // These values are needed. It's correct because the returned values will change\n    const newR = this.clamp(this.r * matrix[0] + this.g * matrix[1] + this.b * matrix[2]);\n    const newG = this.clamp(this.r * matrix[3] + this.g * matrix[4] + this.b * matrix[5]);\n    const newB = this.clamp(this.r * matrix[6] + this.g * matrix[7] + this.b * matrix[8]);\n    this.r = newR;\n    this.g = newG;\n    this.b = newB;\n  }\n\n  /**\n   * Applying cals to get CSS filter for brightness\n   *\n   * @param {number} [value=1]\n   * @memberof Color\n   */\n  brightness(value = 1): void {\n    this.linear(value);\n  }\n\n  /**\n   * Applying cals to get CSS filter for contrast\n   *\n   * @param {number} [value=1]\n   * @memberof Color\n   */\n  contrast(value = 1): void {\n    this.linear(value, -(0.5 * value) + 0.5);\n  }\n\n  private linear(slope = 1, intercept = 0) {\n    this.r = this.clamp(this.r * slope + intercept * 255);\n    this.g = this.clamp(this.g * slope + intercept * 255);\n    this.b = this.clamp(this.b * slope + intercept * 255);\n  }\n\n  /**\n   * Applying cals to get CSS filter for invert\n   *\n   * @param {number} [value=1]\n   * @memberof Color\n   */\n  invert(value = 1): void {\n    this.r = this.clamp((value + (this.r / 255) * (1 - 2 * value)) * 255);\n    this.g = this.clamp((value + (this.g / 255) * (1 - 2 * value)) * 255);\n    this.b = this.clamp((value + (this.b / 255) * (1 - 2 * value)) * 255);\n  }\n\n  /**\n   * transform RGB into HSL values\n   *\n   * @returns {HSLData}\n   * @memberof Color\n   */\n  hsl(): HSLData {\n    const red = this.r / 255;\n    const green = this.g / 255;\n    const blue = this.b / 255;\n\n    // find greatest and smallest channel values\n    const max = Math.max(red, green, blue);\n    const min = Math.min(red, green, blue);\n\n    let hue = 0;\n    let saturation = 0;\n    const lightness = (max + min) / 2;\n\n    // If min and max have the same values, it means\n    // the given color is achromatic\n    if (max === min) {\n      return {\n        h: 0,\n        s: 0,\n        l: lightness * 100,\n      };\n    }\n\n    // Adding delta value of greatest and smallest channel values\n    const delta = max - min;\n\n    saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\n    if (max === red) {\n      hue = (green - blue) / delta + (green < blue ? 6 : 0);\n    } else if (max === green) {\n      hue = (blue - red) / delta + 2;\n    } else if (max === blue) {\n      hue = (red - green) / delta + 4;\n    }\n\n    hue /= 6;\n\n    return {\n      h: hue * 100,\n      s: saturation * 100,\n      l: lightness * 100,\n    };\n  }\n\n  /**\n   * Normalize the value to follow the min and max for RGB colors\n   * min: 0\n   * max: 255\n   *\n   * @private\n   * @param {number} value\n   * @returns {number}\n   * @memberof Color\n   */\n  private clamp(value: number): number {\n    // Minimum RGB Value = 0;\n    // Maximum RGB Value = 255;\n    return Math.min(Math.max(value, 0), 255);\n  }\n}\n\nexport { Color };\n","import { Color } from './color';\nimport { HexToCssConfiguration } from './hex-to-css-filter';\n\ninterface SPSAPayload {\n  /** How many times the script was called to solve the color */\n  called?: number;\n  /** Percentage loss value for the generated filter */\n  loss: number;\n  /** Percentage loss per each color type organized in RGB: red, green, blue, h, s, l. */\n  values: [number, number, number, number, number, number];\n}\n\nclass Solver {\n  private target: Color;\n  private targetHSL: { h: number; s: number; l: number };\n  private reusedColor: Color;\n  private options: { acceptanceLossPercentage: number; maxChecks: number } & HexToCssConfiguration;\n\n  constructor(target: Color, options: HexToCssConfiguration) {\n    this.target = target;\n    this.targetHSL = target.hsl();\n\n    this.options = Object.assign(\n      {},\n      // Adding default values for options\n      {\n        acceptanceLossPercentage: 5,\n        maxChecks: 15,\n      },\n      options,\n    );\n\n    // All the calcs done by the library to generate\n    // a CSS Filter are based on the color `#000`\n    // in this case, `rgb(0, 0, 0)`\n    // Please make sure the background of the element\n    // is `#000` for better performance\n    // and color similarity.\n    this.reusedColor = new Color(0, 0, 0);\n  }\n\n  /**\n   * Returns the solved values for the\n   *\n   * @returns {(SPSAPayload & { filter: string; })}\n   * @memberof Solver\n   */\n  solve(): SPSAPayload & {\n    /** CSS filter generated based on the Hex color */\n    filter: string;\n  } {\n    const result = this.solveNarrow(this.solveWide());\n    return {\n      values: result.values,\n      called: result.called,\n      loss: result.loss,\n      filter: this.css(result.values),\n    };\n  }\n\n  /**\n   * Solve wide values based on the wide values for RGB and HSL values\n   *\n   * @private\n   * @returns {SPSAPayload}\n   * @memberof Solver\n   */\n  private solveWide(): SPSAPayload {\n    const A = 5;\n    const c = 15;\n    // Wide values for RGB and HSL values\n    // the values in the order: [`r`, `g`, `b`, `h`, `s`, `l`]\n    const a = [60, 180, 18000, 600, 1.2, 1.2];\n\n    let best = { loss: Infinity };\n    let counter = 0;\n    while (best.loss > this.options.acceptanceLossPercentage) {\n      const initialFilterValues: SPSAPayload['values'] = [50, 20, 3750, 50, 100, 100];\n      const result: SPSAPayload = this.spsa({\n        A,\n        a,\n        c,\n        values: initialFilterValues,\n        // for wide values we should use the double of tries in\n        // comparison of `solveNarrow()` method\n        maxTriesInLoop: 1000,\n      });\n\n      if (result.loss < best.loss) {\n        best = result;\n      }\n\n      counter += 1;\n      if (counter >= this.options.maxChecks) {\n        break;\n      }\n    }\n\n    return Object.assign({}, best, { called: counter }) as SPSAPayload;\n  }\n\n  /**\n   * Solve narrow values based on the wide values for the filter\n   *\n   * @private\n   * @param {SPSAPayload} wide\n   * @returns {SPSAPayload}\n   * @memberof Solver\n   */\n  private solveNarrow(wide: SPSAPayload): SPSAPayload {\n    const A = wide.loss;\n    const c = 2;\n    const A1 = A + 1;\n    // Narrow values for RGB and HSL values\n    // the values in the order: [`r`, `g`, `b`, `h`, `s`, `l`]\n    const a = [0.25 * A1, 0.25 * A1, A1, 0.25 * A1, 0.2 * A1, 0.2 * A1];\n    return this.spsa({\n      A,\n      a,\n      c,\n      values: wide.values,\n      maxTriesInLoop: 500,\n      called: wide.called,\n    });\n  }\n\n  /**\n   * Returns final value based on the current filter order\n   * to get the order, please check the returned value\n   * in `css()` method\n   *\n   * @private\n   * @param {number} value\n   * @param {number} idx\n   * @returns {number}\n   * @memberof Solver\n   */\n  private fixValueByFilterIDX(value: number, idx: number): number {\n    let max = 100;\n\n    // Fixing max, minimum and value by filter\n    if (idx === 2 /* saturate */) {\n      max = 7500;\n    } else if (idx === 4 /* brightness */ || idx === 5 /* contrast */) {\n      max = 200;\n    }\n\n    if (idx === 3 /* hue-rotate */) {\n      if (value > max) {\n        value %= max;\n      } else if (value < 0) {\n        value = max + (value % max);\n      }\n    }\n    // Checking if value is below the minimum or above\n    // the maximum allowed by filter\n    else if (value < 0) {\n      value = 0;\n    } else if (value > max) {\n      value = max;\n    }\n    return value;\n  }\n\n  private spsa({\n    A,\n    a,\n    c,\n    values,\n    maxTriesInLoop = 500,\n    called = 0,\n  }: {\n    A: number;\n    a: number[];\n    c: number;\n    values: SPSAPayload['values'];\n    maxTriesInLoop: number;\n    called?: number;\n  }): SPSAPayload {\n    const alpha = 1;\n    const gamma = 0.16666666666666666;\n\n    let best = null;\n    let bestLoss = Infinity;\n\n    const deltas = new Array(6) as SPSAPayload['values'];\n    const highArgs = new Array(6) as SPSAPayload['values'];\n    const lowArgs = new Array(6) as SPSAPayload['values'];\n\n    // Size of all CSS filters to be applied to get the correct color\n    const filtersToBeAppliedSize = 6;\n\n    for (let key = 0; key < maxTriesInLoop; key++) {\n      const ck = c / Math.pow(key + 1, gamma);\n      for (let i = 0; i < filtersToBeAppliedSize; i++) {\n        deltas[i] = Math.random() > 0.5 ? 1 : -1;\n        highArgs[i] = values[i] + ck * deltas[i];\n        lowArgs[i] = values[i] - ck * deltas[i];\n      }\n\n      const lossDiff = this.loss(highArgs) - this.loss(lowArgs);\n      for (let i = 0; i < filtersToBeAppliedSize; i++) {\n        const g = (lossDiff / (2 * ck)) * deltas[i];\n        const ak = a[i] / Math.pow(A + key + 1, alpha);\n        values[i] = this.fixValueByFilterIDX(values[i] - ak * g, i);\n      }\n\n      const loss = this.loss(values);\n      if (loss < bestLoss) {\n        best = values.slice(0);\n        bestLoss = loss;\n      }\n    }\n\n    return { values: best, loss: bestLoss, called } as SPSAPayload;\n  }\n\n  /**\n   * Checks how much is the loss for the filter in RGB and HSL colors\n   *\n   * @private\n   * @param {SPSAPayload['values']} filters\n   * @returns {number}\n   * @memberof Solver\n   */\n  private loss(filters: SPSAPayload['values']): number {\n    // Argument as an Array of percentages.\n    const color = this.reusedColor;\n\n    // Resetting the color to black in case\n    // it was called more than once\n    color.set(0, 0, 0);\n\n    color.invert(filters[0] / 100);\n    color.sepia(filters[1] / 100);\n    color.saturate(filters[2] / 100);\n    color.hueRotate(filters[3] * 3.6);\n    color.brightness(filters[4] / 100);\n    color.contrast(filters[5] / 100);\n\n    const colorHSL = color.hsl();\n\n    return (\n      Math.abs(color.r - this.target.r) +\n      Math.abs(color.g - this.target.g) +\n      Math.abs(color.b - this.target.b) +\n      Math.abs(colorHSL.h - this.targetHSL.h) +\n      Math.abs(colorHSL.s - this.targetHSL.s) +\n      Math.abs(colorHSL.l - this.targetHSL.l)\n    );\n  }\n\n  /**\n   * Returns the CSS filter list for the received HEX color\n   *\n   * @private\n   * @param {number[]} filters\n   * @returns {string}\n   * @memberof Solver\n   */\n  private css(filters: number[]): string {\n    const formatCssFilterValueByMultiplier = (idx: number, multiplier = 1): number =>\n      Math.round(filters[idx] * multiplier);\n\n    return [\n      `invert(${formatCssFilterValueByMultiplier(0)}%)`,\n      `sepia(${formatCssFilterValueByMultiplier(1)}%)`,\n      `saturate(${formatCssFilterValueByMultiplier(2)}%)`,\n      `hue-rotate(${formatCssFilterValueByMultiplier(3, 3.6)}deg)`,\n      `brightness(${formatCssFilterValueByMultiplier(4)}%)`,\n      `contrast(${formatCssFilterValueByMultiplier(5)}%);`,\n    ].join(' ');\n  }\n}\n\nexport { Solver };\n","import { Solver } from './solver';\nimport { Color } from './color';\n\n/**\n * Transform a CSS Color from Hexadecimal to RGB color\n *\n * @param {string} hex hexadecimal color\n * @returns {([number, number, number] | [])} array with the RGB colors or empty array\n */\nconst hexToRgb = (hex: string): [number, number, number] | [] => {\n  if (hex.length === 4) {\n    return [parseInt(`0x${hex[1]}${hex[1]}`), parseInt(`0x${hex[2]}${hex[2]}`), parseInt(`0x${hex[3]}${hex[3]}`)] as [\n      number,\n      number,\n      number,\n    ];\n  }\n\n  if (hex.length === 7) {\n    return [parseInt(`0x${hex[1]}${hex[2]}`), parseInt(`0x${hex[3]}${hex[4]}`), parseInt(`0x${hex[5]}${hex[6]}`)] as [\n      number,\n      number,\n      number,\n    ];\n  }\n\n  return [];\n};\n\nconst isNumeric = (n: unknown): boolean => !isNaN(parseFloat(n as string)) && isFinite(n as number);\n\n// Memory cache for the computed results to avoid multiple\n// calculations for the same color\nlet results: {\n  [k: string]: HexToCssResult;\n} = {} as const;\n\nexport interface HexToCssResult {\n  /** How many times the script was called to solve the color */\n  called: number;\n  /** CSS filter generated based on the Hex color */\n  filter: string;\n  /** The received color */\n  hex: string;\n  /** Percentage loss value for the generated filter */\n  loss: number;\n  /** Hex color in RGB */\n  rgb: [number, number, number];\n  /** Percentage loss per each color type organized in RGB: red, green, blue, h, s, l. */\n  values: [number, number, number, number, number, number];\n  /** Boolean that returns true if value was previously computed.\n   * So that means the returned value is coming from the in-memory cached */\n  cache: boolean;\n}\n\nexport interface HexToCssConfiguration {\n  /**\n   * Acceptable color percentage to be lost.\n   * @default 5\n   */\n  acceptanceLossPercentage?: number;\n  /**\n   * Maximum checks that needs to be done to return the best value.\n   * @default 10\n   */\n  maxChecks?: number;\n  /**\n   * Boolean value that forces recalculation for CSS filter generation.\n   * @default false\n   */\n  forceFilterRecalculation?: boolean;\n}\n\n/**\n * A function that transforms a HEX color into CSS filters\n *\n * @param colorValue string hexadecimal color\n * @param opts HexToCssConfiguration function configuration\n *\n */\nexport const hexToCSSFilter = (colorValue: string, opts: HexToCssConfiguration = {}): HexToCssResult => {\n  let red;\n  let green;\n  let blue;\n\n  if (results[colorValue] && !opts.forceFilterRecalculation) {\n    return Object.assign({}, results[colorValue], { cache: true }) as HexToCssResult;\n  }\n\n  let color: Color;\n  try {\n    [red, green, blue] = hexToRgb(colorValue);\n    if (!isNumeric(red) || !isNumeric(green) || !isNumeric(blue)) {\n      throw new Error(`hextToRgb returned an invalid value for '${colorValue}'`);\n    }\n\n    color = new Color(Number(red), Number(green), Number(blue));\n  } catch (error) {\n    throw new Error(`Color value should be in HEX format. ${error}`);\n  }\n\n  const solver = new Solver(\n    color,\n    Object.assign(\n      {},\n      // `HexToCssConfiguration` Defaults\n      {\n        acceptanceLossPercentage: 5,\n        maxChecks: 30,\n        forceFilterRecalculation: false,\n      },\n      opts,\n    ) as HexToCssConfiguration,\n  );\n\n  return (results[colorValue] = Object.assign({}, solver.solve(), {\n    hex: colorValue,\n    rgb: [red, green, blue],\n    cache: false,\n  }) as HexToCssResult);\n};\n\n/**\n * A function that clears cached results\n *\n * @param  {string} key? HEX string value passed previously `#24639C`. If not passed, it clears all cached results\n * @returns void\n */\nexport const clearCache = (key?: string): void => {\n  if (!key) {\n    results = {};\n  } else if (results[key]) {\n    delete results[key];\n  }\n};\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {NowboardIconService} from \"./nowboard-icon.service\";\nimport {HexToCssConfiguration, hexToCSSFilter} from './hex-to-css-filter';\nimport {INowboardIconConfig} from \"./interface\";\n\n@Component({\n  selector: 'nb-icon',\n  template: `\n    <span class=\"nb-icon {{icon}}-x{{size}}\" [style]=\"spanStyleWrapper\">\n      <img [src]=\"src\" style=\"{{style}}\">\n    </span>\n  `,\n  styles: ['span {display: inline-flex; align-items: center; justify-content: center;}']\n})\nexport class NowboardIconComponent implements OnInit, OnChanges {\n  @Input() size: number = 1;\n  @Input() primary: string | undefined;\n  @Input() disabled_color: string | undefined;\n  @Input() disabled: boolean = false;\n  @Input() icon: string = '';\n  public style: any = '';\n  public spanStyleWrapper: any = {};\n  public src: string = '';\n  public default_size = 12;\n  // @ts-ignore\n  private color: string;\n\n  constructor(public service: NowboardIconService) {\n    this.service.setColorRules.subscribe((color:INowboardIconConfig | null) => {\n      if (color) {\n        console.log('color changed', color)\n        this.setColor();\n      }\n    })\n  }\n\n  ngOnInit(): void {\n    this.setColor();\n    this.src = this.service.getFromRegistry(this.icon);\n  }\n\n  private setColor() {\n    if (!this.disabled) {\n      if (!this.primary && this.service.DefaultColor?.primary) {\n        this.color = this.service.DefaultColor.primary;\n      } else if (this.primary) {\n        // @ts-ignore\n        this.color = this.primary;\n      } else {\n        this.color = '#000000'\n      }\n    } else {\n      if (!this.disabled_color && this.service.DefaultColor?.disabled_color) {\n        this.color = this.service.DefaultColor.disabled_color\n      } else if (this.disabled_color) {\n        this.color = this.disabled_color\n      } else {\n        this.color = '#000000'\n      }\n    }\n\n    this.style = [\n      `width: ${this.default_size * this.size}px`,\n      `height: ${this.default_size * this.size}px`,\n      `filter: ${this.filter()}`,\n      `transform: scale(${this.size * 0.9})`\n    ].join(';')\n    this.spanStyleWrapper = {\n      width: (this.default_size * this.size) + 'px',\n      height: (this.default_size * this.size) + 'px',\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.ngOnInit();\n  }\n\n\n  private filter() {\n    const config: HexToCssConfiguration = {\n      acceptanceLossPercentage: 1,\n      maxChecks: 10,\n    };\n\n    const convert = hexToCSSFilter(this.color, config);\n    return convert.filter?.replace(';', '');\n  }\n}\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {NowboardIconComponent} from './nowboard-icon.component';\nimport {NowboardIconService} from \"./nowboard-icon.service\";\nimport {INowboardIconConfig} from \"./interface\";\n\n\n\n@NgModule({\n  declarations: [\n    NowboardIconComponent\n  ],\n  imports: [],\n  exports: [\n    NowboardIconComponent\n  ],\n  providers: [\n    NowboardIconService\n  ]\n})\nexport class NowboardIconModule {\n  constructor(@Optional() @SkipSelf() parentModule?: NowboardIconModule) {\n    if (parentModule) {\n      throw new Error(\n        'NowboardIconModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  public static forRoot(config: INowboardIconConfig): ModuleWithProviders<NowboardIconModule> {\n    return {\n      ngModule: NowboardIconModule,\n      providers: [\n        {provide: '__NowboardIcon__', useValue: config},\n        NowboardIconService\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of nowboard-icon\n */\n\nexport * from './lib/nowboard-icon.service';\nexport * from './lib/nowboard-icon.component';\nexport * from './lib/nowboard-icon.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NowboardIconService"],"mappings":"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"}